<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classGame" kind="class" language="C++" prot="public">
    <compoundname>Game</compoundname>
    <includes refid="Game_8hpp" local="no">Game.hpp</includes>
    <innerclass refid="classGame_1_1StartGameEvent" prot="private">Game::StartGameEvent</innerclass>
    <innerclass refid="classGame_1_1WindowCloseEvent" prot="private">Game::WindowCloseEvent</innerclass>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classGame_1ac688251934c61309cd8bb77074d24592" prot="public" static="yes" mutable="no">
        <type>const sf::Time</type>
        <definition>const sf::Time Game::TIME_PER_FRAME</definition>
        <argsstring></argsstring>
        <name>TIME_PER_FRAME</name>
        <briefdescription>
<para>The amount of time the game should spend on each frame. This is equal to 1 / framerate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="26" column="27" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1aafc26e7c34368b9265420e7242d743fc" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static int</type>
        <definition>constexpr static int Game::WORLD_WIDTH</definition>
        <argsstring></argsstring>
        <name>WORLD_WIDTH</name>
        <initializer>= 1024</initializer>
        <briefdescription>
<para>The width of the world, in game units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="31" column="26" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1ad2cf08045935823c7e44c9a92ce4a4e9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static int</type>
        <definition>constexpr static int Game::WORLD_HEIGHT</definition>
        <argsstring></argsstring>
        <name>WORLD_HEIGHT</name>
        <initializer>= 768</initializer>
        <briefdescription>
<para>The height of the world, in game units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="36" column="26" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a29c3289355609a9593a24d5bc1f08bcc" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static int</type>
        <definition>constexpr static int Game::WORLD_BORDER</definition>
        <argsstring></argsstring>
        <name>WORLD_BORDER</name>
        <initializer>= 20</initializer>
        <briefdescription>
<para>The width of the border in the world, in game units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="41" column="26" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1ab7491872b0e12b59443f26c55737e6f1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static float</type>
        <definition>constexpr static float Game::PADDLE_SPEED</definition>
        <argsstring></argsstring>
        <name>PADDLE_SPEED</name>
        <initializer>= 350.f</initializer>
        <briefdescription>
<para>The speed at which paddles move, in game units / second. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="46" column="28" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a465cd9a559c7d4ebbda1aeba1cf41d84" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static float</type>
        <definition>constexpr static float Game::BALL_INITIAL_SPEED</definition>
        <argsstring></argsstring>
        <name>BALL_INITIAL_SPEED</name>
        <initializer>= 500.f</initializer>
        <briefdescription>
<para>The initial speed of the ball. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="51" column="28" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGame_1a5829c9631ab47dc35c217a3a723d83ec" prot="private" static="no" mutable="no">
        <type>sf::RenderWindow</type>
        <definition>sf::RenderWindow Game::_mainWindow</definition>
        <argsstring></argsstring>
        <name>_mainWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="124" column="22" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1af90aceb22b316b9b24376b16eb8b9541" prot="private" static="no" mutable="no">
        <type>sf::View</type>
        <definition>sf::View Game::_view</definition>
        <argsstring></argsstring>
        <name>_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="125" column="14" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1ac791c608d75190283a410efad3810123" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classScreen" kindref="compound">Screen</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Screen&gt; Game::_currentScreen</definition>
        <argsstring></argsstring>
        <name>_currentScreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="127" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a144eb9d43285b39d026ba82b9c1f390e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classDispatcher" kindref="compound">Dispatcher</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Dispatcher&gt; Game::_dispatcher</definition>
        <argsstring></argsstring>
        <name>_dispatcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="128" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a3e18c07c78b4242566baaa9cf7577cc7" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classEntityEngine" kindref="compound">EntityEngine</ref> &gt;</type>
        <definition>std::unique_ptr&lt;EntityEngine&gt; Game::_engine</definition>
        <argsstring></argsstring>
        <name>_engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="129" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a8124911bed5bcf8d15b44ea18d975844" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classRenderSystem" kindref="compound">RenderSystem</ref> &gt;</type>
        <definition>std::shared_ptr&lt;RenderSystem&gt; Game::_render</definition>
        <argsstring></argsstring>
        <name>_render</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="130" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1afd32fcb975d2005f15b7b1f183ebd032" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classVelocitySystem" kindref="compound">VelocitySystem</ref> &gt;</type>
        <definition>std::shared_ptr&lt;VelocitySystem&gt; Game::_velocity</definition>
        <argsstring></argsstring>
        <name>_velocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="131" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1aca86f3ee4af51edc40b11aded8f1b0dc" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classPlayerInputSystem" kindref="compound">PlayerInputSystem</ref> &gt;</type>
        <definition>std::shared_ptr&lt;PlayerInputSystem&gt; Game::_input</definition>
        <argsstring></argsstring>
        <name>_input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="132" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a73ceb985408d98ed7ac74c934ec67921" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classBallSystem" kindref="compound">BallSystem</ref> &gt;</type>
        <definition>std::shared_ptr&lt;BallSystem&gt; Game::_ballSystem</definition>
        <argsstring></argsstring>
        <name>_ballSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="133" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a75581be2b1e57a66b6e4f47162130589" prot="private" static="no" mutable="no">
        <type><ref refid="classStateMachine" kindref="compound">StateMachine</ref></type>
        <definition>StateMachine Game::_stm</definition>
        <argsstring></argsstring>
        <name>_stm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="135" column="18" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a8b759b196d95e223fce9d2a561d0811e" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classStateMachine_1_1State" kindref="compound">StateMachine::State</ref> &gt;</type>
        <definition>std::shared_ptr&lt;StateMachine::State&gt; Game::_uninitialized</definition>
        <argsstring></argsstring>
        <name>_uninitialized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="136" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1ad5db2f10208a77e7702042c4699651d6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classStateMachine_1_1State" kindref="compound">StateMachine::State</ref> &gt;</type>
        <definition>std::shared_ptr&lt;StateMachine::State&gt; Game::_splash</definition>
        <argsstring></argsstring>
        <name>_splash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="137" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1aa28fd01b9e4ddd2776c80ac20b16e029" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classStateMachine_1_1State" kindref="compound">StateMachine::State</ref> &gt;</type>
        <definition>std::shared_ptr&lt;StateMachine::State&gt; Game::_mainMenu</definition>
        <argsstring></argsstring>
        <name>_mainMenu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="138" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1afc5a10b8bccd7cfdc30bf05487eb406a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classStateMachine_1_1State" kindref="compound">StateMachine::State</ref> &gt;</type>
        <definition>std::shared_ptr&lt;StateMachine::State&gt; Game::_playing</definition>
        <argsstring></argsstring>
        <name>_playing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="139" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a58775c31fc345953be7e3970697c7ca2" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classStateMachine_1_1State" kindref="compound">StateMachine::State</ref> &gt;</type>
        <definition>std::shared_ptr&lt;StateMachine::State&gt; Game::_won</definition>
        <argsstring></argsstring>
        <name>_won</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="140" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a2f31a31038154291b365ba915801a961" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classStateMachine_1_1State" kindref="compound">StateMachine::State</ref> &gt;</type>
        <definition>std::shared_ptr&lt;StateMachine::State&gt; Game::_lost</definition>
        <argsstring></argsstring>
        <name>_lost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="141" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a8d977ba98cb45348910be34a1d45b34f" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classStateMachine_1_1State" kindref="compound">StateMachine::State</ref> &gt;</type>
        <definition>std::shared_ptr&lt;StateMachine::State&gt; Game::_exiting</definition>
        <argsstring></argsstring>
        <name>_exiting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="142" column="21" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGame_1ad59df6562a58a614fda24622d3715b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Game::Game</definition>
        <argsstring>()</argsstring>
        <name>Game</name>
        <briefdescription>
<para>Construct a new <ref refid="classGame" kindref="compound">Game</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="57" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a3d9b98f7c4a96ecf578f75b96c9f0e90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
<para>Starts the game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="62" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a1dd3a58e38678f68291498125fc97ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classDispatcher" kindref="compound">Dispatcher</ref> *</type>
        <definition>Dispatcher* Game::getDispatcher</definition>
        <argsstring>()</argsstring>
        <name>getDispatcher</name>
        <briefdescription>
<para>Get the <ref refid="classDispatcher" kindref="compound">Dispatcher</ref> object that controls event dispatch for the game. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="classDispatcher" kindref="compound">Dispatcher</ref> object that controls event dispatch for the game. The object is owned by the game and its lifetime will be exactly the same as the game&apos;s.</para>
<para><simplesect kind="return"><para>A pointer to the game&apos;s event dispatcher bus </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="72" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGame_1a0f949c784aaaf43debc99ad6fcde7381" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Game::isExiting</definition>
        <argsstring>() const</argsstring>
        <name>isExiting</name>
        <briefdescription>
<para>A shortcut for checking if the game is currently executing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="78" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a1cd675249f338b0f43d8a120c5e464b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::gameLoop</definition>
        <argsstring>(const sf::Time deltaTime)</argsstring>
        <name>gameLoop</name>
        <param>
          <type>const sf::Time</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
<para>Performs an iteration of the game loop. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles input, updates the systems, and renders if applicable.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of time that is being processed in this gameLoop() iteration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="87" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1aa5abc4e07a1f5abce24e473c5567300b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::handleInput</definition>
        <argsstring>()</argsstring>
        <name>handleInput</name>
        <briefdescription>
<para>Reads the current input events and handles them. </para>
        </briefdescription>
        <detaileddescription>
<para>Dispatches events on the main <ref refid="classDispatcher" kindref="compound">Dispatcher</ref> and handles game state transitions as appropriate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="94" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a3c5cef85bab5e49551c308fa4f55008a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::update</definition>
        <argsstring>(const sf::Time detlaTime)</argsstring>
        <name>update</name>
        <param>
          <type>const sf::Time</type>
          <declname>detlaTime</declname>
        </param>
        <briefdescription>
<para>Updates the relevant systems, such as the <ref refid="classEntityEngine" kindref="compound">EntityEngine</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>detlaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>the time that has passed since the last call to update() </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="101" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a1b807309d862ce17b4dbd1d98612cf5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::modifyView</definition>
        <argsstring>(const std::function&lt; sf::View(sf::View)&gt; op)</argsstring>
        <name>modifyView</name>
        <param>
          <type>const std::function&lt; sf::View(sf::View)&gt;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Modifies the current view of the window with the specified operation. </para>
        </briefdescription>
        <detaileddescription>
<para>Call this instead of directly modifying the view to avoid code duplication to handle pass-by-value calls in that process.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>a function that takes the current sf::View for the RenderWindow and modifies it to be the new view. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="110" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a35634df4d04d64ed478a3ba30f0828cc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classEntity" kindref="compound">Entity</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Entity&gt; Game::createPlayer</definition>
        <argsstring>()</argsstring>
        <name>createPlayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="112" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a896afc2172602e9dd1bb07d4660d5ee6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classEntity" kindref="compound">Entity</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Entity&gt; Game::createEnemy</definition>
        <argsstring>()</argsstring>
        <name>createEnemy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="113" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1ad470e447f5e524c9fda47b141499fc72" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classEntity" kindref="compound">Entity</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Entity&gt; Game::createBall</definition>
        <argsstring>()</argsstring>
        <name>createBall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="114" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a15ddd769261d923827a3cdf41499c843" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="116" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a7ed332e93df3bef8de4ddaea2de12e23" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::displaySplashScreen</definition>
        <argsstring>()</argsstring>
        <name>displaySplashScreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1af74fd203e3b31917ca9d4769fa608c48" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::displayMainMenu</definition>
        <argsstring>()</argsstring>
        <name>displayMainMenu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a3b303855128e52c27946779f60f24fee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::startPlaying</definition>
        <argsstring>()</argsstring>
        <name>startPlaying</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="120" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1afc1c16ab41b972b74288dcc5ca9ff87a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::loseGame</definition>
        <argsstring>()</argsstring>
        <name>loseGame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="121" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a953b4199b652f3951eaeee50f5b9f7a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::winGame</definition>
        <argsstring>()</argsstring>
        <name>winGame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="122" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple C++ game that shamelessly rips off Pong. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" line="20" column="1" bodyfile="/home/nathan/Coding/SimpleCppGame/include/Game.hpp" bodystart="21" bodyend="157"/>
    <listofallmembers>
      <member refid="classGame_1a73ceb985408d98ed7ac74c934ec67921" prot="private" virt="non-virtual"><scope>Game</scope><name>_ballSystem</name></member>
      <member refid="classGame_1ac791c608d75190283a410efad3810123" prot="private" virt="non-virtual"><scope>Game</scope><name>_currentScreen</name></member>
      <member refid="classGame_1a144eb9d43285b39d026ba82b9c1f390e" prot="private" virt="non-virtual"><scope>Game</scope><name>_dispatcher</name></member>
      <member refid="classGame_1a3e18c07c78b4242566baaa9cf7577cc7" prot="private" virt="non-virtual"><scope>Game</scope><name>_engine</name></member>
      <member refid="classGame_1a8d977ba98cb45348910be34a1d45b34f" prot="private" virt="non-virtual"><scope>Game</scope><name>_exiting</name></member>
      <member refid="classGame_1aca86f3ee4af51edc40b11aded8f1b0dc" prot="private" virt="non-virtual"><scope>Game</scope><name>_input</name></member>
      <member refid="classGame_1a2f31a31038154291b365ba915801a961" prot="private" virt="non-virtual"><scope>Game</scope><name>_lost</name></member>
      <member refid="classGame_1aa28fd01b9e4ddd2776c80ac20b16e029" prot="private" virt="non-virtual"><scope>Game</scope><name>_mainMenu</name></member>
      <member refid="classGame_1a5829c9631ab47dc35c217a3a723d83ec" prot="private" virt="non-virtual"><scope>Game</scope><name>_mainWindow</name></member>
      <member refid="classGame_1afc5a10b8bccd7cfdc30bf05487eb406a" prot="private" virt="non-virtual"><scope>Game</scope><name>_playing</name></member>
      <member refid="classGame_1a8124911bed5bcf8d15b44ea18d975844" prot="private" virt="non-virtual"><scope>Game</scope><name>_render</name></member>
      <member refid="classGame_1ad5db2f10208a77e7702042c4699651d6" prot="private" virt="non-virtual"><scope>Game</scope><name>_splash</name></member>
      <member refid="classGame_1a75581be2b1e57a66b6e4f47162130589" prot="private" virt="non-virtual"><scope>Game</scope><name>_stm</name></member>
      <member refid="classGame_1a8b759b196d95e223fce9d2a561d0811e" prot="private" virt="non-virtual"><scope>Game</scope><name>_uninitialized</name></member>
      <member refid="classGame_1afd32fcb975d2005f15b7b1f183ebd032" prot="private" virt="non-virtual"><scope>Game</scope><name>_velocity</name></member>
      <member refid="classGame_1af90aceb22b316b9b24376b16eb8b9541" prot="private" virt="non-virtual"><scope>Game</scope><name>_view</name></member>
      <member refid="classGame_1a58775c31fc345953be7e3970697c7ca2" prot="private" virt="non-virtual"><scope>Game</scope><name>_won</name></member>
      <member refid="classGame_1a465cd9a559c7d4ebbda1aeba1cf41d84" prot="public" virt="non-virtual"><scope>Game</scope><name>BALL_INITIAL_SPEED</name></member>
      <member refid="classGame_1ad470e447f5e524c9fda47b141499fc72" prot="private" virt="non-virtual"><scope>Game</scope><name>createBall</name></member>
      <member refid="classGame_1a896afc2172602e9dd1bb07d4660d5ee6" prot="private" virt="non-virtual"><scope>Game</scope><name>createEnemy</name></member>
      <member refid="classGame_1a35634df4d04d64ed478a3ba30f0828cc" prot="private" virt="non-virtual"><scope>Game</scope><name>createPlayer</name></member>
      <member refid="classGame_1af74fd203e3b31917ca9d4769fa608c48" prot="private" virt="non-virtual"><scope>Game</scope><name>displayMainMenu</name></member>
      <member refid="classGame_1a7ed332e93df3bef8de4ddaea2de12e23" prot="private" virt="non-virtual"><scope>Game</scope><name>displaySplashScreen</name></member>
      <member refid="classGame_1ad59df6562a58a614fda24622d3715b65" prot="public" virt="non-virtual"><scope>Game</scope><name>Game</name></member>
      <member refid="classGame_1a1cd675249f338b0f43d8a120c5e464b4" prot="private" virt="non-virtual"><scope>Game</scope><name>gameLoop</name></member>
      <member refid="classGame_1a1dd3a58e38678f68291498125fc97ddb" prot="public" virt="non-virtual"><scope>Game</scope><name>getDispatcher</name></member>
      <member refid="classGame_1aa5abc4e07a1f5abce24e473c5567300b" prot="private" virt="non-virtual"><scope>Game</scope><name>handleInput</name></member>
      <member refid="classGame_1a0f949c784aaaf43debc99ad6fcde7381" prot="private" virt="non-virtual"><scope>Game</scope><name>isExiting</name></member>
      <member refid="classGame_1afc1c16ab41b972b74288dcc5ca9ff87a" prot="private" virt="non-virtual"><scope>Game</scope><name>loseGame</name></member>
      <member refid="classGame_1a1b807309d862ce17b4dbd1d98612cf5f" prot="private" virt="non-virtual"><scope>Game</scope><name>modifyView</name></member>
      <member refid="classGame_1ab7491872b0e12b59443f26c55737e6f1" prot="public" virt="non-virtual"><scope>Game</scope><name>PADDLE_SPEED</name></member>
      <member refid="classGame_1a15ddd769261d923827a3cdf41499c843" prot="private" virt="non-virtual"><scope>Game</scope><name>render</name></member>
      <member refid="classGame_1a3d9b98f7c4a96ecf578f75b96c9f0e90" prot="public" virt="non-virtual"><scope>Game</scope><name>start</name></member>
      <member refid="classGame_1a3b303855128e52c27946779f60f24fee" prot="private" virt="non-virtual"><scope>Game</scope><name>startPlaying</name></member>
      <member refid="classGame_1ac688251934c61309cd8bb77074d24592" prot="public" virt="non-virtual"><scope>Game</scope><name>TIME_PER_FRAME</name></member>
      <member refid="classGame_1a3c5cef85bab5e49551c308fa4f55008a" prot="private" virt="non-virtual"><scope>Game</scope><name>update</name></member>
      <member refid="classGame_1a953b4199b652f3951eaeee50f5b9f7a5" prot="private" virt="non-virtual"><scope>Game</scope><name>winGame</name></member>
      <member refid="classGame_1a29c3289355609a9593a24d5bc1f08bcc" prot="public" virt="non-virtual"><scope>Game</scope><name>WORLD_BORDER</name></member>
      <member refid="classGame_1ad2cf08045935823c7e44c9a92ce4a4e9" prot="public" virt="non-virtual"><scope>Game</scope><name>WORLD_HEIGHT</name></member>
      <member refid="classGame_1aafc26e7c34368b9265420e7242d743fc" prot="public" virt="non-virtual"><scope>Game</scope><name>WORLD_WIDTH</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

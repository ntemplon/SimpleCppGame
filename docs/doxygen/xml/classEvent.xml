<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classEvent" kind="class" language="C++" prot="public">
    <compoundname>Event</compoundname>
    <includes refid="Event_8hpp" local="no">Event.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classEvent_1ac69a0dd1e044195ca97615f6c9dd47dd" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Event::_type</definition>
        <argsstring></argsstring>
        <name>_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Code/SimpleCppGame/build/_deps/jupiter-engine-src/include/event/Event.hpp" line="29" column="17" bodyfile="/home/nathan/Code/SimpleCppGame/build/_deps/jupiter-engine-src/include/event/Event.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classEvent_1abbf6d6b18eddabca420d63201f3ec1dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Event::Event</definition>
        <argsstring>(std::string type)</argsstring>
        <name>Event</name>
        <param>
          <type>std::string</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classEvent" kindref="compound">Event</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new event of the specified type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the event, typically declared as a static member of the class creating the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Code/SimpleCppGame/build/_deps/jupiter-engine-src/include/event/Event.hpp" line="19" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classEvent_1aef164554b683656e08da56d5936083da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Event::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <briefdescription>
<para>Get the Type of the event. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The std::string indicating what type of event is being provided. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Code/SimpleCppGame/build/_deps/jupiter-engine-src/include/event/Event.hpp" line="26" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class representing an event that has occurred. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nathan/Code/SimpleCppGame/build/_deps/jupiter-engine-src/include/event/Event.hpp" line="9" column="1" bodyfile="/home/nathan/Code/SimpleCppGame/build/_deps/jupiter-engine-src/include/event/Event.hpp" bodystart="10" bodyend="30"/>
    <listofallmembers>
      <member refid="classEvent_1ac69a0dd1e044195ca97615f6c9dd47dd" prot="private" virt="non-virtual"><scope>Event</scope><name>_type</name></member>
      <member refid="classEvent_1abbf6d6b18eddabca420d63201f3ec1dd" prot="public" virt="non-virtual"><scope>Event</scope><name>Event</name></member>
      <member refid="classEvent_1aef164554b683656e08da56d5936083da" prot="public" virt="non-virtual"><scope>Event</scope><name>getType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

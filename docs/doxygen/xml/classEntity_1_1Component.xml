<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classEntity_1_1Component" kind="class" language="C++" prot="public">
    <compoundname>Entity::Component</compoundname>
    <derivedcompoundref refid="classBallComponent" prot="public" virt="non-virtual">BallComponent</derivedcompoundref>
    <derivedcompoundref refid="classEnemyComponent" prot="public" virt="non-virtual">EnemyComponent</derivedcompoundref>
    <derivedcompoundref refid="classLocationComponent" prot="public" virt="non-virtual">LocationComponent</derivedcompoundref>
    <derivedcompoundref refid="classPlayerComponent" prot="public" virt="non-virtual">PlayerComponent</derivedcompoundref>
    <derivedcompoundref refid="classRenderComponent" prot="public" virt="non-virtual">RenderComponent</derivedcompoundref>
    <derivedcompoundref refid="classVelocityComponent" prot="public" virt="non-virtual">VelocityComponent</derivedcompoundref>
    <includes refid="Entity_8hpp" local="no">Entity.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classEntity_1_1Component_1acdef5cbeecdd0c279a5b47dc0cdb197b" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string Entity::Component::_id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ganymede/Coding/SimpleCppGame/build/_deps/jupiter-engine-src/include/entity/Entity.hpp" line="47" column="27" bodyfile="/home/ganymede/Coding/SimpleCppGame/build/_deps/jupiter-engine-src/include/entity/Entity.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classEntity_1_1Component_1aa870551c8ede04e4ed6f538eee376a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Entity::Component::Component</definition>
        <argsstring>(const std::string id)</argsstring>
        <name>Component</name>
        <param>
          <type>const std::string</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classEntity_1_1Component" kindref="compound">Component</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classEntity_1_1Component" kindref="compound">Component</ref>&apos;s ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ganymede/Coding/SimpleCppGame/build/_deps/jupiter-engine-src/include/entity/Entity.hpp" line="34" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classEntity_1_1Component_1a8e19d41c2a8041556e2cbd5c92e4906e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Entity::Component::~Component</definition>
        <argsstring>()</argsstring>
        <name>~Component</name>
        <briefdescription>
<para>This is only declared to make the class polymorphic so that dymaic_cast between <ref refid="classEntity_1_1Component" kindref="compound">Component</ref> types works. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ganymede/Coding/SimpleCppGame/build/_deps/jupiter-engine-src/include/entity/Entity.hpp" line="39" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classEntity_1_1Component_1aa27ad6d78bfc3ff60566ca824b29c1db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string Entity::Component::getId</definition>
        <argsstring>() const</argsstring>
        <name>getId</name>
        <briefdescription>
<para>Get the ID of the component. This will return the same value for all instances of a class of <ref refid="classEntity_1_1Component" kindref="compound">Component</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ganymede/Coding/SimpleCppGame/build/_deps/jupiter-engine-src/include/entity/Entity.hpp" line="44" column="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A component of an entity in the game&apos;s component entity system. </para>
    </briefdescription>
    <detaileddescription>
<para>Components represent an aspect of an <ref refid="classEntity" kindref="compound">Entity</ref>. They store state information, such as position and sprite data, as well as mark the <ref refid="classEntity" kindref="compound">Entity</ref> as belong to a certain class of object, like being the player or an AI opponent.</para>
<para><ref refid="classEntity_1_1Component" kindref="compound">Component</ref> types are identified with their ID, which is passed to the constructor. To avoid odd bugs and behavior, all instances of the same <ref refid="classEntity_1_1Component" kindref="compound">Component</ref> subclass should have the same ID, which is usually declared as a static member of the class or a preprocessor constant in the header file. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>LocationComponent</label>
        <link refid="classLocationComponent"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>VelocityComponent</label>
        <link refid="classVelocityComponent"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>PlayerComponent</label>
        <link refid="classPlayerComponent"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>RenderComponent</label>
        <link refid="classRenderComponent"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>EnemyComponent</label>
        <link refid="classEnemyComponent"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BallComponent</label>
        <link refid="classBallComponent"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Entity::Component</label>
        <link refid="classEntity_1_1Component"/>
      </node>
    </inheritancegraph>
    <location file="/home/ganymede/Coding/SimpleCppGame/build/_deps/jupiter-engine-src/include/entity/Entity.hpp" line="26" column="5" bodyfile="/home/ganymede/Coding/SimpleCppGame/build/_deps/jupiter-engine-src/include/entity/Entity.hpp" bodystart="27" bodyend="48"/>
    <listofallmembers>
      <member refid="classEntity_1_1Component_1acdef5cbeecdd0c279a5b47dc0cdb197b" prot="private" virt="non-virtual"><scope>Entity::Component</scope><name>_id</name></member>
      <member refid="classEntity_1_1Component_1aa870551c8ede04e4ed6f538eee376a1a" prot="public" virt="non-virtual"><scope>Entity::Component</scope><name>Component</name></member>
      <member refid="classEntity_1_1Component_1aa27ad6d78bfc3ff60566ca824b29c1db" prot="public" virt="non-virtual"><scope>Entity::Component</scope><name>getId</name></member>
      <member refid="classEntity_1_1Component_1a8e19d41c2a8041556e2cbd5c92e4906e" prot="public" virt="virtual"><scope>Entity::Component</scope><name>~Component</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
